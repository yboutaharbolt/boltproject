# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
  - checkout: self
    fetchDepth: 0
  # Étape 1 : Installer Java 17
  - task: JavaToolInstaller@1
    inputs:
      versionSpec: '17'
      jdkArchitectureOption: 'x64'
      jdkSourceOption: 'PreInstalled'

  # Étape 2 : Vérifier la version de Java installe
  - script: java -version
    displayName: 'Vérification de la version de Java'

  # Étape 3 : Configurer les permissions pour le script Gradle Wrapper
  - script: chmod +x gradlew
    displayName: 'Rendre le Gradle Wrapper exécutable'
  - task: SonarCloudPrepare@3
    inputs:
      SonarCloud: 'sonarqube cloud'  # Assurez-vous que le nom de votre connexion SonarCloud est correct
      organization: 'yboutaharbolt'  # Votre organisation SonarCloud
      projectKey: 'yboutaharbolt_boltproject'  # Clé du projet SonarCloud
      projectName: 'boltProject'  # Nom du projet SonarCloud
      scannerMode: 'CLI'
      extraProperties: |
       sonar.login=$(SONAR_TOKEN)  
       sonar.projectKey='yboutaharbolt_boltproject'
       sonar.organization='yboutaharbolt'
       sonar.projectName='boltProject'

  # Étape 4 : Télécharger les dépendances et compiler le projet
  - task: Gradle@3
    inputs:
      gradleWrapperFile: 'gradlew'
      tasks: 'build'
      options: '--stacktrace --info'
    displayName: 'Télécharger les dépendances et compiler le projet'
  - task: Gradle@3
    inputs:
      gradleWrapperFile: 'gradlew'
      tasks: 'build'
      sonarQubeRunAnalysis: true
      sqGradlePluginVersionChoice: 'build'
      spotBugsAnalysis: false
      
  - task: SonarCloudAnalyze@3
    inputs:
      jdkversion: 'JAVA_HOME_17_X64'
  - task: SonarCloudAnalyze@3
    inputs:
      jdkversion: 'JAVA_HOME_17_X64'  # Votre version de JDK
      sonar.projectKey: 'yboutaharbolt_boltproject'  # Clé de votre projet SonarCloud

  - task: SonarCloudPublish@3
    inputs:
      pollingTimeoutSec: '300'
  # Étape 5 : Exécuter les tests avec JUnit
  - task: Gradle@3
    inputs:
      gradleWrapperFile: 'gradlew'
      tasks: 'test'
      options: '--stacktrace --info'
      publishJUnitResults: true
      testResultsFiles: '**/build/test-results/test/*.xml'
    displayName: 'Exécuter les tests unitaires'

 